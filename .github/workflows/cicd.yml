name: Deploy Project with Poetry

on:
  push:
    branches:
      - main

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Setup Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    # 3. Install Poetry
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    # 4. Install project dependencies via Poetry
    - name: Install dependencies
      run: |
        poetry install --no-interaction --no-ansi

    # 5. Run tests
    - name: Run tests
      run: |
        poetry run pytest --maxfail=1 --disable-warnings -q
      continue-on-error: false

    # 6. SSH into remote server and deploy
    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_SSH_KEY }}
        port: ${{ secrets.REMOTE_PORT }}
        script: |
            export PATH="$HOME/.local/bin:$PATH"
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

            cd host/StudyFlow
            git pull origin main

            # Python deps
            poetry install --no-interaction

            # Frontend build
            cd src/frontend
            node -v
            npm -v
            which node
            which npm
            npm ci
            npm run build
            cd ../..

            # Restart service
            sudo systemctl daemon-reload
            sudo systemctl restart StudyFlow.service
            systemctl status StudyFlow.service --no-pager
